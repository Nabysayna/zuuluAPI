<?php

namespace AppBundle\Service;
use Doctrine\ORM\EntityManagerInterface;


class SDEGetterService
{


   private $em ;

   private $fromCustomer ;

   private $pin ;


    public function __construct(EntityManagerInterface $em){
       $this->em = $em ;

      $dbuser = $this->em->getRepository('AppBundle:Users')->findOneBy(array('iduser' => 'testUser' )) ;

      if (!empty($dbuser) ) {
        $this->fromCustomer = explode('#', $dbuser->getCredzuulu() )[0] ;
        $this->pin = explode('#', $dbuser->getCredzuulu() )[1] ;
      }
      else{
        $this->fromCustomer = "0" ;
        $this->pin = "0" ;
      }

    }


    public function getBillSDE($reference, $credZuulu)
    {

      $fromCustomer = explode("#", $credZuulu)[0] ;
      $pin = explode("#", $credZuulu)[1] 

      $requeteParams = '<?xml version="1.0" encoding="UTF-8" ?><Request FN="WEPPOI" fromCustmer="'.$this->fromCustomer.'" PIN="'.$this->pin.'" waterCustmerReference="101001371720" deviceModel="SM-E7000" devicePlatform="Android" deviceVersion="4.4.2" deviceManufacturer="samsung" packageName="com.zuulu.zuulu" versionNumber="1.0.11" isVirtualDevice="false" geoLatitude="" geoLongitude="" appClientName="Samba Diallo" appType="production" deviceIP="154.124.220.12" ipLocationCode="SN" uniqueDeviceKey="1563208909945" LN="FR"></Request>' ;

      $curl = curl_init();
      curl_setopt_array($curl, array(
      CURLOPT_URL => "http://194.187.94.199:5053/zuulu",
      CURLOPT_RETURNTRANSFER => true,
      CURLOPT_ENCODING => "",
      CURLOPT_MAXREDIRS => 10,
      CURLOPT_TIMEOUT => 30,
      CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
      CURLOPT_POST => true,
      CURLOPT_CUSTOMREQUEST => "POST",
      CURLOPT_POSTFIELDS => $requeteParams,
      CURLOPT_HTTPHEADER => array(
          "cache-control: no-cache",
          "content-type: application/xml",
      ), ));



      $responseCurl = curl_exec($curl);
      $err = curl_error($curl);
      curl_close($curl);

      $resXML = new \SimpleXMLElement($responseCurl) ;


      $allBills = array() ;

      foreach ($resXML->ResponseMessage->invoices->invoice as $invoice) {
         $billInfo = array('customerReference' =>  ((array)$invoice["custmerReference"])["0"] ,
                           'cashPaymentFee' => ((array)$invoice["cashPaymentFee"])["0"],
                           'amount' => ((array)$invoice["amount"])["0"],
                           'dueDate' => ((array)$invoice["dueDate"])["0"] ) ;

        array_push($allBills, $billInfo) ;

      }



      foreach ($resXML->ResponseMessage->invoices->invoice as $invoice) {
         echo $invoice["firstName"];
         echo "<br>"; 
         echo $invoice["lastName"];
         echo "<br>"; 
         echo $invoice["totalAmount"];
         echo "<br>"; 
         echo $invoice["dueDate"];
         echo "<br>"; 
      }

      if ($err) {
        return "0";
      } else {
        return "1" ;
      }

    }

}
